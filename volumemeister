-- vim: ft=lua:
local monitor,volume
function wrapPeripheral( _nameOfPer)
    assert(type(_nameOfPer) == "string", "Please enter the name of the Peripheral")
    for key, name in pairs(peripheral.getNames()) do
        if (peripheral.getType(name) == _nameOfPer) then 
            _per= peripheral.wrap(name)
        end
    end
    assert(_per)
    return _per
end

function switchCrystal() 
    _i = 1
    while not true do
        _i=_i + 1
        turtle.select(_i)
    end
    turtle.suckDown()
    turtle.select(_i)
    turtle.dropDown()
end

function volUp()
    if volume < 15 then
        volume = volume + 1
    else
        volume = 16
    end
    setVol(volume)
end

function volDown()
    if volume > 0 then
        volume = volume - 1
    else
        volume = 0
    end
    setVol(volume)
end

function setVol(volume) 
    redstone.setAnalogOutput("bottom",volume)
end

function drawButtons()
    _x,_y = monitor.getSize()
    _border = 1 
    relY,relX =0
    relY = relY + _border
    monitor.setCursorPos(1,relY)
    monitor.write("Change station")
    relY = relY + _border + 3
    monitor.setCursorPos(1,relY)
    monitor.write("Increase volume")
    relY = relY + _border+1
    monitor.setCursorPos(1,relY)
    monitor.write("Decrease volume")
end

monitor = wrapPeripheral("monitor")
monitor.clear()
monitor.setTextColor(colors.cyan)
drawButtons()
volume = 0
while true do
    local event, button, x, y = os.pullEvent()
    if event == "monitor_touch" then
    if y < 4 then
        switchCrystal()
    elseif y < 6 then
        volUp()
    else 
        volDown()
    end
end
    --if event == "button_click" then
end


