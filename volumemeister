-- vim: ft=lua:
local monitor,volume
function wrapPeripheral( _nameOfPer)
    assert(type(_nameOfPer) == "string", "Please enter the name of the Peripheral")
    for key, name in pairs(peripheral.getNames()) do
        if (peripheral.getType(name) == _nameOfPer) then 
            _per= peripheral.wrap(name)
        end
    end
    assert(_per)
    return _per
end

function switchCrystal() 
    _i = 1
    while not true do
        turtle.select(_i)
        _i=_i + 1
    end
    turtle.suckDown()
    turtle.select(_i)
    turtle.dropDown()
end

function volUp()
    if volume < 15 then
        volume = volume + 1
    else
        volume = 16
    end
    setVol(volume)
end

function volDown()
    if volume > 0 then
        volume = volume - 1
    else
        volume = 0
    end
    setVol(volume)
end

function setVol(volume) 
    redstone.setAnalogOutput("bottom",volume)
end


--monitor = wrapPeripheral("monitor")
os.loadAPI("touchpoint")
--monitor.clear()
local t = touchpoint.new("right")
t:add("Change station", switchCrystal, 1,1,14,2) 
t:add("Increase volume", volUp, 1,2 ,14,2)
t:add("Decrease volume", volDown, 1,3 ,14,2)

t:run()
while true do
    --local event, p1 = t:handleEvents(os.pullEvent())
    --if event == "button_click" then
    t:run()
end


